plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

allprojects {
	group = 'org.flab.hyunsb'
	version = '0.0.1'
	java.sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

subprojects {

	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.junit.jupiter:junit-jupiter-api'
		testImplementation 'org.junit.jupiter:junit-jupiter-params'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	}

	test {
		useJUnitPlatform()
		finalizedBy 'jacocoTestReport'
	}

	jacoco {
		toolVersion = "0.8.11"
	}

	jacocoTestReport {
		reports {
			xml.required = false;
			csv.required = false;
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}

		afterEvaluate {

			classDirectories.setFrom(files(classDirectories.files.collect {
				fileTree(dir: it, excludes: [
						"**/config/*",
						"**/entity/*",
						"**/UsedTradingApplication.class"])
			}))
		}

		finalizedBy 'jacocoTestCoverageVerification'
	}

	jacocoTestCoverageVerification {
		violationRules {
			rule {
				enabled = true
				element = 'CLASS'

				limit {
					counter = 'BRANCH'
					value = 'COVEREDRATIO'
					minimum = 0.80
				}

				limit {
					counter = 'LINE'
					value = 'COVEREDRATIO'
					minimum = 0.80
				}

				excludes = ["*.*Config", "*.*Entity", "*.UsedTradingApplication"]
			}
		}
	}
	bootJar.enabled = false
}

project(':used-trading-application') {
	dependencies {
		implementation project(':used-trading-domain')
	}
}

project(':used-trading-bootstrap') {
	bootJar.enabled = true
	jar.enabled = false
	dependencies {
		implementation project(':used-trading-domain')
		implementation project(':used-trading-application')
		implementation project(':used-trading-framework')
	}
}

project(':used-trading-framework') {
	dependencies {
		implementation project(':used-trading-domain')
		implementation project(':used-trading-application')
	}
}

jar.enabled = false
bootJar.enabled = false